{"ast":null,"code":"var _class;\nimport { map, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiMarvelService {\n  constructor(http) {\n    this.http = http;\n    this.limit = 100;\n    this.publicKey = '35852b715a21d1f6fb70c8cba6bec76a';\n    this.hash = '7fda7630da0d926d2b0630548b81ab02';\n    this.urlApi = `https://gateway.marvel.com:443/v1/public/characters?orderBy=-modified&limit=${this.limit}&ts=1&apikey=${this.publicKey}&hash=${this.hash}`;\n  }\n  getAllCharacters() {\n    return this.http.get(this.urlApi).pipe(map(data => data.data.results));\n  }\n  getCharacterDetails(id) {\n    const urlCharacterApi = `https://gateway.marvel.com:443/v1/public/characters/${id}?&ts=1&apikey=${this.publicKey}&hash=${this.hash}`;\n    return this.http.get(urlCharacterApi).pipe(tap(res => {\n      res.data.results[0].events.items.map(resEvents => {\n        this.getEvents(resEvents.resourceURI).subscribe(res => resEvents.status = res);\n      });\n      res.data.results[0].series.items.map(resSeries => {\n        this.getEvents(resSeries.resourceURI).subscribe(res => resSeries.status = res);\n      });\n    }));\n  }\n  getEvents(url) {\n    return this.http.get(`${url}?&ts=1&apikey=${this.publicKey}&hash=${this.hash}`).pipe(map(res => res.data.results[0]));\n  }\n}\n_class = ApiMarvelService;\n_class.ɵfac = function ApiMarvelService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","tap","ApiMarvelService","constructor","http","limit","publicKey","hash","urlApi","getAllCharacters","get","pipe","data","results","getCharacterDetails","id","urlCharacterApi","res","events","items","resEvents","getEvents","resourceURI","subscribe","status","series","resSeries","url","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ueslei Marcelino\\Documents\\Estudos\\Angular\\teste\\teste-frontend-vr-marvel-heroes\\src\\app\\service\\api-marvel.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, map, pipe, tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiMarvelService {\r\n  limit = 100\r\n  publicKey = '35852b715a21d1f6fb70c8cba6bec76a';\r\n  hash = '7fda7630da0d926d2b0630548b81ab02';\r\n  urlApi = `https://gateway.marvel.com:443/v1/public/characters?orderBy=-modified&limit=${this.limit}&ts=1&apikey=${this.publicKey}&hash=${this.hash}`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllCharacters(): Observable<any> {\r\n    return this.http.get<any>(this.urlApi).pipe(map((data: any) => data.data.results))\r\n  }\r\n\r\n  getCharacterDetails(id: number): Observable<any> {\r\n    const urlCharacterApi = `https://gateway.marvel.com:443/v1/public/characters/${id}?&ts=1&apikey=${this.publicKey}&hash=${this.hash}`;\r\n    return this.http.get<any>(urlCharacterApi).pipe(\r\n      tap((res: any) => {\r\n        res.data.results[0].events.items.map((resEvents: any) => {\r\n          this.getEvents(resEvents.resourceURI).subscribe(res => resEvents.status = res)\r\n        })\r\n        res.data.results[0].series.items.map((resSeries: any) => {\r\n          this.getEvents(resSeries.resourceURI).subscribe(res => resSeries.status = res)\r\n        })\r\n      }\r\n      )\r\n    )\r\n\r\n  }\r\n\r\n  public getEvents(url: string): Observable<any> {\r\n    return this.http.get<any>(`${url}?&ts=1&apikey=${this.publicKey}&hash=${this.hash}`).pipe(\r\n      map(\r\n        (res: any) => res.data.results[0]\r\n      )\r\n    )\r\n  }\r\n\r\n}\r\n"],"mappings":";AAEA,SAAqBA,GAAG,EAAQC,GAAG,QAAQ,MAAM;;;AAKjD,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALxB,KAAAC,KAAK,GAAG,GAAG;IACX,KAAAC,SAAS,GAAG,kCAAkC;IAC9C,KAAAC,IAAI,GAAG,kCAAkC;IACzC,KAAAC,MAAM,GAAG,+EAA+E,IAAI,CAACH,KAAK,gBAAgB,IAAI,CAACC,SAAS,SAAS,IAAI,CAACC,IAAI,EAAE;EAE5G;EAExCE,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAM,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CAACX,GAAG,CAAEY,IAAS,IAAKA,IAAI,CAACA,IAAI,CAACC,OAAO,CAAC,CAAC;EACpF;EAEAC,mBAAmBA,CAACC,EAAU;IAC5B,MAAMC,eAAe,GAAG,uDAAuDD,EAAE,iBAAiB,IAAI,CAACT,SAAS,SAAS,IAAI,CAACC,IAAI,EAAE;IACpI,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAMM,eAAe,CAAC,CAACL,IAAI,CAC7CV,GAAG,CAAEgB,GAAQ,IAAI;MACfA,GAAG,CAACL,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACK,MAAM,CAACC,KAAK,CAACnB,GAAG,CAAEoB,SAAc,IAAI;QACtD,IAAI,CAACC,SAAS,CAACD,SAAS,CAACE,WAAW,CAAC,CAACC,SAAS,CAACN,GAAG,IAAIG,SAAS,CAACI,MAAM,GAAGP,GAAG,CAAC;MAChF,CAAC,CAAC;MACFA,GAAG,CAACL,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACY,MAAM,CAACN,KAAK,CAACnB,GAAG,CAAE0B,SAAc,IAAI;QACtD,IAAI,CAACL,SAAS,CAACK,SAAS,CAACJ,WAAW,CAAC,CAACC,SAAS,CAACN,GAAG,IAAIS,SAAS,CAACF,MAAM,GAAGP,GAAG,CAAC;MAChF,CAAC,CAAC;IACJ,CAAC,CACA,CACF;EAEH;EAEOI,SAASA,CAACM,GAAW;IAC1B,OAAO,IAAI,CAACvB,IAAI,CAACM,GAAG,CAAM,GAAGiB,GAAG,iBAAiB,IAAI,CAACrB,SAAS,SAAS,IAAI,CAACC,IAAI,EAAE,CAAC,CAACI,IAAI,CACvFX,GAAG,CACAiB,GAAQ,IAAKA,GAAG,CAACL,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAClC,CACF;EACH;;SAlCWX,gBAAgB;;mBAAhBA,MAAgB,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhB7B,MAAgB;EAAA8B,OAAA,EAAhB9B,MAAgB,CAAA+B,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}